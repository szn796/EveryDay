4.如何理解js的异步
异步产生的原因是js的单线程。

js是一门单线程的语言，这是因为它运行在浏览器渲染主线程中，渲染主线程只有一个。
渲染主线程运行很多工作，例如解析HTML、解析CSS、计算样式、布局、渲染页面、执行JS
如果使用同步的方式，就可能导致主线程阻塞，导致消息队列中后续的任务无法及时被执行，也就是会出现卡死的现象。
所以浏览器使用异步的方式来避免。具体的做法是当某些任务发生时，例如：计时器、网络、事件监听，主线程将任务交给其他线程去处理，自身立即结束任务的执行，转而执行后续消息队列中的任务。当其他线程完成时，将事先传递的“回调函数包装成任务”，加到消息队列的末尾，等待主线程的调度执行。
在这种情况下，保证了浏览器不会阻塞，能够单线程流畅运行。
